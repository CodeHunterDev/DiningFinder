object Libs {
    const val ACTIVITY_COMPOSE = "androidx.activity:activity-compose"
    const val ACTIVITY_KTX = "androidx.activity:activity-ktx"
    const val APPCOMPAT = "androidx.appcompat:appcompat"
    const val ARCH_TESTING = "androidx.arch.core:core-testing"
    const val CARDVIEW = "androidx.cardview:cardview"
    const val CONSTRAINT_LAYOUT = "androidx.constraintlayout:constraintlayout"
    const val CORE_KTX = "androidx.core:core-ktx"
    const val COROUTINES = "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    const val COROUTINES_TEST = "org.jetbrains.kotlinx:kotlinx-coroutines-test"
    const val COROUTINES_PLAY_SERVICE = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services"
    const val DRAWER_LAYOUT = "androidx.drawerlayout:drawerlayout"
    const val ESPRESSO_CONTRIB = "androidx.test.espresso:espresso-contrib"
    const val ESPRESSO_CORE = "androidx.test.espresso:espresso-core"
    const val EXT_JUNIT = "androidx.test.ext:junit"
    const val FRAGMENT_KTX = "androidx.fragment:fragment-ktx"
    const val FRAGMENT_TEST = "androidx.fragment:fragment-testing"
    const val GLIDE = "com.github.bumptech.glide:glide"
    const val GLIDE_COMPILER = "com.github.bumptech.glide:compiler"
    const val GOOGLE_MAP_UTILS_KTX = "com.google.maps.android:maps-utils-ktx"
    const val GOOGLE_PLAY_SERVICES_MAPS_KTX = "com.google.maps.android:maps-ktx"
    const val GOOGLE_PLAY_SERVICES_VISION = "com.google.android.gms:play-services-vision"
    const val GSON = "com.google.code.gson:gson"
    const val HAMCREST = "org.hamcrest:hamcrest-library"
    const val HILT_ANDROID = "com.google.dagger:hilt-android"
    const val HILT_COMPILER = "com.google.dagger:hilt-android-compiler"
    const val HILT_TESTING = "com.google.dagger:hilt-android-testing"
    const val JUNIT = "junit:junit"
    const val KOTLIN_STDLIB = "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
    const val MATERIAL = "com.google.android.material:material"
    const val MOCKITO_CORE = "org.mockito:mockito-core"
    const val MOCKITO_KOTLIN = "com.nhaarman:mockito-kotlin"
    const val NAVIGATION_FRAGMENT_KTX = "androidx.navigation:navigation-fragment-ktx"
    const val NAVIGATION_UI_KTX = "androidx.navigation:navigation-ui-ktx"
    const val OKHTTP = "com.squareup.okhttp3:okhttp"
    const val OKHTTP_LOGGING_INTERCEPTOR = "com.squareup.okhttp3:logging-interceptor"
    const val RULES = "androidx.test:rules"
    const val RUNNER = "androidx.test:runner"
    const val TIMBER = "com.jakewharton.timber:timber"
    const val OKHTTP_MOCK_SERVER = "com.squareup.okhttp3:mockwebserver"
    const val RETROFIT = "com.squareup.retrofit2:retrofit"
    const val MOSHI_RETROFIT = "com.squareup.retrofit2:converter-moshi"
    const val MOSHI_KOTLIN = "com.squareup.moshi:moshi-kotlin"
    const val MOSHI = "com.squareup.moshi:moshi"
    const val KOTCHI = "se.ansman.kotshi:api"
    const val KOTCHI_COMPILER = "se.ansman.kotshi:compiler"
    const val FAKER = "com.github.javafaker:javafaker"
    const val HILT_BINDER = "com.paulrybitskyi:hilt-binder"
    const val HILT_BINDER_COMPILER = "com.paulrybitskyi:hilt-binder-compiler"
    const val TURBINE = "app.cash.turbine:turbine"
    const val ASSERT_J = "org.assertj:assertj-core"
    const val LIFECYCLE_COMPILER = "androidx.lifecycle:lifecycle-compiler"
    const val LIFECYCLE_RUNTIME_KTX = "androidx.lifecycle:lifecycle-runtime-ktx"
    const val LIFECYCLE_VIEW_MODEL_KTX = "androidx.lifecycle:lifecycle-viewmodel-ktx"
    const val PLAY_SERVICE_LOCATION = "com.google.android.gms:play-services-location"
}
